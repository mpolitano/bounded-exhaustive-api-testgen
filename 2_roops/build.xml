<project xmlns:jacoco="antlib:org.jacoco.ant" name="2_roops" default="compile" basedir=".">


  <property name="max.heap"                value="8g"/>
  <!-- The directories for compilation targets -->
  <property name="build.home"              value="build"/>
  <property name="build.classes"           value="${build.home}/classes"/>
  <property name="build.tests"             value="${build.home}/tests"/>
  <property name="build.be"                value="${build.home}/be"/>
  
  <!-- Javac -->
  <property name="compile.debug"           value="true"/>
  <property name="compile.deprecation"     value="true"/>
  <property name="compile.optimize"        value="false"/>
  <property name="compile.source"          value="1.5"/>
  <property name="compile.target"          value="1.5"/>
  <property name="compile.encoding"        value="iso-8859-1"/>
  
  <!-- The base directories for sources -->
  <property name="source.java"             value="src/main/java"/>
  <property name="test.java"               value="src/test/java"/>
  <property name="test.report.dir"         value="${build.home}/test-report"/>
  <property name="be.java"                 value="be-tests"/>

  <property name="lib.dir"                 value="../lib/"/>

  <path id="jacoco.lib">
      <pathelement location="${lib.dir}/jacocoant.jar" />
      <pathelement location="${lib.dir}/jacocoagent.jar" />
      <pathelement location="${lib.dir}/jacocoreport.jar" />
  </path>  


  <path id="korat.lib">
      <pathelement location="../lib/korat.jar" />
  </path>  

  <!-- The dependency libraries for running/compiling tests -->
  <path id="test.lib">
      <fileset dir="test-lib">
         <include name="**/*.jar"/>
      </fileset>
      <pathelement location="${lib.dir}/junit-4.12.jar" />
      <pathelement location="${lib.dir}/hamcrest-core-1.3.jar" />
  </path> 

  <path id="be.lib">
      <pathelement location="${lib.dir}/be.jar" />
  </path>  


<!-- ====================================================================== -->
<!-- ========== Executable Targets ======================================== -->
<!-- ====================================================================== -->

  <target name="clean"
          description="Clean build and distribution directories">
    <delete dir="${build.home}"/>
  </target>

  <target name="clean-auto-tests"
          description="Clean automatically generated tests">
    <delete dir="${be.java}"/>
  </target>

<!-- ====================================================================== -->

  <target name="prepare"
          description="Prepare build directory">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${source.java}"/>
    <mkdir dir="${test.java}"/>
    <mkdir dir="${test.report.dir}"/>
    <mkdir dir="lib"/>
    <mkdir dir="test-lib"/>
  </target>

<!-- ====================================================================== -->

  <target name="compile" depends="prepare"
          description="Compile main code">
    <mkdir dir="${build.classes}"/>
    <javac  srcdir="${source.java}"
           destdir="${build.classes}"
            source="${compile.source}"
            target="${compile.target}"
             debug="${compile.debug}"
       deprecation="${compile.deprecation}"
          optimize="${compile.optimize}"
          encoding="${compile.encoding}"
       includeantruntime="false">
          <classpath refid="korat.lib"/>
    </javac>
    <copy todir="${build.classes}">
        <fileset dir="${source.java}" excludes="**/*.java"/>
    </copy>
  </target>
<!-- ====================================================================== -->
  
  <target name="compile-tests" depends="compile"
          description="Compile user provided tests">
    <mkdir dir="${build.tests}"/>
    <javac  srcdir="${test.java}"
           destdir="${build.tests}"
             debug="${compile.debug}"
            source="${compile.source}"
            target="${compile.target}"
       deprecation="${compile.deprecation}"
          optimize="${compile.optimize}"
          encoding="${compile.encoding}">
          <classpath>
            <path refid="source.lib" />
            <path refid="test.lib" />
            <pathelement path="${build.classes}"/>
          </classpath>
    </javac>
    <copy todir="${build.tests}">
        <fileset dir="${test.java}" excludes="**/*.java"/>
    </copy>
  </target>
  
<!-- ====================================================================== -->
  
  <target name="compile-be" depends="compile"
          description="Compile BE generated tests">
    <mkdir dir="${build.be}"/>
    <javac  srcdir="${be.java}"
           destdir="${build.be}"
            source="${compile.source}"
            target="${compile.target}"
             debug="${compile.debug}"
       deprecation="${compile.deprecation}"
          optimize="${compile.optimize}"
              fork="true"
       memoryMaximumSize="${max.heap}"
       includeantruntime="false">
          <classpath>
            <path refid="source.lib" />
            <path refid="test.lib" />
            <pathelement path="${build.classes}"/>
          </classpath>
    </javac>
  </target>

  <target name="be-test" depends="compile-be"
          description="Run BE generated tests">
     <junit printsummary="yes" haltonfailure="no" fork="yes"
          showoutput="yes">
        <formatter type="brief" usefile="true" />
        <classpath>
           <pathelement path="${build.classes}"/>
           <pathelement path="${build.be}"/>
           <path refid="source.lib" />
           <path refid="test.lib" />
        </classpath>
        <batchtest fork="yes" todir="${test.report.dir}">
           <fileset dir="${be.java}">
             <include name="**/RegressionTest.java"/>
           </fileset>
        </batchtest>
     </junit>
  </target> 


</project>